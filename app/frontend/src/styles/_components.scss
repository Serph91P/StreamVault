@use 'sass:map';
@use 'variables' as v;

// Navigation
nav {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: v.$spacing-sm;
  width: 100%;

  @media (min-width: map.get(v.$breakpoints, 'md')) {
    width: auto;
    gap: 1.5rem;
  }

  a {
    color: v.$text-secondary;
    text-decoration: none;
    font-weight: 500;
    padding: v.$spacing-sm;
    border-radius: 4px;
    transition: all 0.2s ease;
    font-size: map.get(v.$font-scale, 'sm');

    @media (min-width: map.get(v.$breakpoints, 'md')) {
      padding: v.$spacing-sm v.$spacing-md;
      font-size: map.get(v.$font-scale, 'base');
    }

    &:hover {
      color: v.$text-primary;
      background: rgba(255, 255, 255, 0.1);
    }

    &.router-link-active {
      color: v.$primary-color;
      background: rgba(145, 71, 255, 0.1);
    }
  }
}

// Forms
.form-group {
  margin-bottom: v.$spacing-md;
}

.input-field {
  flex: 1;
  background: #18181b;
  border: 2px solid #3a3a3d;
  color: #efeff1;
  padding: 12px 16px;
  border-radius: 6px;
  font-size: map.get(v.$font-scale, 'base');
  transition: all 0.2s ease;
  width: 100%;

  &:focus {
    outline: none;
    border-color: #9147ff;
    box-shadow: 0 0 0 2px rgba(145, 71, 255, 0.2);
  }

  &::placeholder {
    color: #5c5c5e;
  }
}

// Streamer Grid
.streamer-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: v.$spacing-md;
  padding: v.$spacing-md;
  margin: 0 auto;
  max-width: 100%;
  width: 100%;
  box-sizing: border-box;

  @media (min-width: map.get(v.$breakpoints, 'md')) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (min-width: map.get(v.$breakpoints, 'lg')) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.streamer-card {
  background: v.$background-darker;
  border-radius: 8px;
  padding: v.$spacing-md;
  display: flex;
  flex-direction: column;
  gap: v.$spacing-md;
  transition: transform 0.2s ease;

  &:hover {
    transform: translateY(-2px);
  }
}

// Notification Feed
.notification-feed {
  position: fixed;
  bottom: v.$spacing-md;
  left: v.$spacing-md;
  right: v.$spacing-md;
  z-index: 1000;

  @media (min-width: map.get(v.$breakpoints, 'md')) {
    bottom: auto;
    top: 80px;
    right: v.$spacing-md;
    left: auto;
    width: 300px;
  }
}

.notification-item {
  background: #2f2f2f;
  color: white;
  padding: 1rem;
  margin-bottom: 0.5rem;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);

  &.success {
    background: #28a745;
  }

  &.error {
    background: #dc3545;
  }
}

// Streamer Form
.streamer-form {
  width: 100%;
  max-width: 600px;
  margin: 0 auto;

  .input-group {
    display: flex;
    align-items: stretch; // This ensures equal height
    gap: v.$spacing-md;

    .input-field, 
    .submit-button {
      height: 44px; // Consistent height
      display: flex;
      align-items: center;
    }

    .submit-button {
      padding: 0 v.$spacing-xl; // Wider padding for better proportion
    }

    @media (min-width: map.get(v.$breakpoints, 'md')) {
      flex-direction: row;
      align-items: flex-start;
    }
  }
}

// Subscription Manager
.subscription-manager {
  padding: v.$spacing-md;

  .controls {
    margin-bottom: v.$spacing-md;
    display: flex;
    flex-direction: column;
    gap: v.$spacing-sm;

    @media (min-width: map.get(v.$breakpoints, 'md')) {
      flex-direction: row;
      gap: v.$spacing-md;
    }
  }
}
  .subscription-list {
    display: grid;
    grid-template-columns: 1fr;
    gap: v.$spacing-md;
  
    @media (min-width: map.get(v.$breakpoints, 'md')) {
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
  }

  .subscription-item {
    background: v.$background-darker;
    padding: v.$spacing-md;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    gap: v.$spacing-sm;
  }
  
// Viewer Stats
.viewer-stats {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: v.$spacing-md;
  background: v.$background-darker;
  border-radius: 8px;

  canvas {
    width: 100% !important;
    height: auto !important;
    min-height: 200px;

    @media (min-width: map.get(v.$breakpoints, 'md')) {
      min-height: 300px;
    }
  }
}

// Status Indicators
.status-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: #ff4444;
  transition: background-color 0.3s;

  &.live {
    background: #44ff44;
  }
}

.status-badge {
  padding: 4px 8px;
  border-radius: 12px;
  font-size: map.get(v.$font-scale, 'xs');
  font-weight: bold;
  min-width: 60px;
  text-align: center;

  &.live {
    background: v.$success-color;
  }

  &.offline {
    background: v.$danger-color;
  }
}

// Buttons
.submit-button,
.btn,
.delete-btn {
  background: v.$primary-color;
  color: white;
  border: none;
  padding: v.$spacing-sm v.$spacing-md;
  border-radius: 6px;
  font-size: map.get(v.$font-scale, 'base');
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  width: 100%;
  position: relative;
  overflow: hidden;
  background-image: linear-gradient(to bottom, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

  @media (min-width: map.get(v.$breakpoints, 'md')) {
    width: auto;
  }

  &:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  &:active:not(:disabled) {
    transform: translateY(1px);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  &:disabled {
    background: #392e5c;
    cursor: not-allowed;
    opacity: 0.7;
  }
}

.delete-btn {
  background: v.$danger-color;
  
  &:hover:not(:disabled) {
    background: color.scale(v.$danger-color, 10%);
  }
}// Button ripple effect
.btn::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255,255,255,0.5);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%);
  transform-origin: 50% 50%;
}

.btn:focus:not(:active)::after {
  animation: ripple 1s ease-out;
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  20% {
    transform: scale(25, 25);
    opacity: 0.3;
  }
  100% {
    opacity: 0;
    transform: scale(40, 40);
  }
}

// Vue-style inputs
.input-field {
  border-color: #42b883;
  &:focus {
    box-shadow: 0 0 0 2px rgba(66, 184, 131, 0.2);
  }
}

// Animations
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loader {
  width: 16px;
  height: 16px;
  border: 2px solid #fff;
  border-top: 2px solid transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.notification-enter-active,
.notification-leave-active {
  transition: all 0.3s ease;
}

.notification-enter-from,
.notification-leave-to {
  opacity: 0;
  transform: translateX(30px);
}

// Interactive Elements
.interactive-element {
  @media (hover: none) {
    min-height: 44px;
    min-width: 44px;
  }
}

// Responsive Tables
.streamer-table-container {
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch; // Smooth scrolling on iOS
  padding: v.$spacing-md;
  
  .streamer-table {
    th, td {
      padding: v.$spacing-md;
      
      @media (min-width: map.get(v.$breakpoints, 'md')) {
        padding: v.$spacing-lg;
      }
    }

    @media (max-width: map.get(v.$breakpoints, 'md')) {
      display: block;
      
      th, td {
        min-width: 120px; // Prevent text from wrapping too early
      }
      
      td:before {
        content: attr(data-label);
        float: left;
        font-weight: bold;
        text-transform: uppercase;
      }
    }
  }
}

// Enhanced button styles
.controls {
  .btn {
    background: v.$primary-color;
    padding: v.$spacing-sm v.$spacing-lg;
    border-radius: 6px;
    font-weight: 600;
    transition: background 0.2s ease;

    &:hover {
      background: color.scale(v.$primary-color, 10%);
    }

    &.danger {
      background: v.$danger-color;
      &:hover {
        background: color.scale(v.$danger-color, 10%);
      }
    }
  }
}
