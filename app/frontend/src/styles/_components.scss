@use 'variables' as v;

// Navigation
nav {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: v.$spacing-xs;
  width: 100%;

  @media (min-width: map-get(v.$breakpoints, 'md')) {
    width: auto;
    gap: v.$spacing-md;
  }

  a {
    color: v.$text-secondary;
    text-decoration: none;
    font-weight: 500;
    padding: v.$spacing-xs v.$spacing-sm;
    border-radius: 4px;
    transition: all 0.2s ease;
    font-size: v.$font-sm;
    text-align: center;
    width: calc(50% - v.$spacing-xs);

    @media (min-width: map-get(v.$breakpoints, 'md')) {
      width: auto;
      padding: v.$spacing-sm v.$spacing-md;
      font-size: v.$font-base;
    }

    &:hover {
      color: v.$text-primary;
      background: rgba(255, 255, 255, 0.1);
    }

    &.router-link-active {
      color: v.$primary-color;
      background: rgba(145, 71, 255, 0.1);
    }
  }
}

// Forms
.form-group {
  margin-bottom: v.$spacing-md;
  width: 100%;
}

.input-field {
  width: 100%;
  padding: v.$spacing-md;
  background: v.$background-darker;
  border: 2px solid v.$border-color;
  border-radius: 6px;
  color: v.$text-primary;
  font-size: v.$font-base;
  transition: all 0.2s ease;

  &:focus {
    outline: none;
    border-color: v.$primary-color;
    box-shadow: 0 0 0 2px rgba(v.$primary-color, 0.2);
  }

  &::placeholder {
    color: v.$text-secondary;
  }
}

// Buttons
.btn, 
button {
  width: 100%;
  padding: v.$spacing-md;
  border: none;
  border-radius: 6px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: v.$font-base;
  text-align: center;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: v.$spacing-sm;

  @media (min-width: map-get(v.$breakpoints, 'md')) {
    width: auto;
    min-width: 120px;
  }

  &.primary {
    background: v.$primary-color;
    color: white;

    &:hover:not(:disabled) {
      background: darken(v.$primary-color, 10%);
    }
  }

  &.danger {
    background: v.$danger-color;
    color: white;

    &:hover:not(:disabled) {
      background: darken(v.$danger-color, 10%);
    }
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Tables
.streamer-table-container {
  width: 100%;
  overflow-x: auto;
  background: v.$background-darker;
  border-radius: 8px;
  border: 1px solid v.$border-color;
  margin: v.$spacing-md 0;
}

.streamer-table {
  width: 100%;
  border-collapse: collapse;
  min-width: 600px; // Ensures table doesn't get too cramped on mobile

  th, td {
    padding: v.$spacing-sm;
    text-align: left;
    border-bottom: 1px solid v.$border-color;

    @media (min-width: map-get(v.$breakpoints, 'md')) {
      padding: v.$spacing-md;
    }
  }

  th {
    background: rgba(0, 0, 0, 0.2);
    font-weight: 600;
    color: v.$text-secondary;
  }
}

.notification-feed {
  position: fixed;
  top: 80px;
  right: 20px;
  width: 300px;
  z-index: 1000;
}

.notification-item {
  background: #2f2f2f;
  color: white;
  padding: 1rem;
  margin-bottom: 0.5rem;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);

  &.success {
    background: #28a745;
  }

  &.error {
    background: #dc3545;
  }
}

.status-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: #ff4444;
  transition: background-color 0.3s;

  &.live {
    background: #44ff44;
  }
}

.viewer-stats {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: 1rem;
}

.subscription-manager {
  padding: 1rem;
}

.controls {
  margin-bottom: 1rem;
  display: flex;
  gap: 1rem;
}

.subscription-list {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.subscription-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.subscription-info {
  display: flex;
  gap: 1rem;
}

.streamer-form {
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
}

.input-group {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
}

.submit-button {
  background: #9147ff;
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 6px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.2s ease;
  display: flex;
  align-items: center;
  gap: 8px;

  &:hover {
    background: #772ce8;
  }

  &:disabled {
    background: #392e5c;
    cursor: not-allowed;
  }
}

.welcome {
  padding: 2rem;
  text-align: center;
}

.notification-enter-active,
.notification-leave-active {
  transition: all 0.3s ease;
}

.notification-enter-from,
.notification-leave-to {
  opacity: 0;
  transform: translateX(30px);
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loader {
  width: 16px;
  height: 16px;
  border: 2px solid #fff;
  border-top: 2px solid transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.streamer-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: v.$spacing-md;
  
  @media (min-width: map-get(v.$breakpoints, 'lg')) {
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  }
}

.interactive-element {
  @media (hover: none) {
    min-height: 44px; // iOS minimum touch target
    min-width: 44px;
  }
}
