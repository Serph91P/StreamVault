function c(){console.group("🔍 PWA Debug Information"),console.log("🌐 User Agent:",navigator.userAgent),console.log("📱 Platform:",navigator.platform),console.log("🗣️ Language:",navigator.language),console.log("🔗 URL:",window.location.href),console.log("🔒 Protocol:",window.location.protocol);const i=/Android/i.test(navigator.userAgent),t=/Chrome/i.test(navigator.userAgent)&&!/Edge|OPR/i.test(navigator.userAgent);console.log("📱 Is Android:",i),console.log("🌐 Is Chrome:",t);const r=["standalone","minimal-ui","fullscreen","browser"];let n="browser";r.forEach(o=>{const e=window.matchMedia(`(display-mode: ${o})`).matches;console.log(`📐 Display mode ${o}:`,e),e&&(n=o)}),console.log("📲 PWA Installed:",n!=="browser"),console.log("⚙️ Service Worker supported:","serviceWorker"in navigator),"serviceWorker"in navigator&&(console.log("🎮 Service Worker controller:",!!navigator.serviceWorker.controller),navigator.serviceWorker.getRegistrations().then(o=>{console.log("📋 Service Worker registrations:",o.length),o.forEach((e,a)=>{console.log(`  Registration ${a+1}:`,e.scope)})}));const s="onbeforeinstallprompt"in window;console.log("📲 beforeinstallprompt supported:",s),console.log("📲 Install prompt available:",!!window.deferredPrompt),console.log("Push Manager supported:","PushManager"in window),console.log("Notifications supported:","Notification"in window),"Notification"in window&&console.log("Notification permission:",Notification.permission),fetch("/manifest.json").then(o=>o.json()).then(o=>{console.log("Manifest loaded successfully:",o)}).catch(o=>{console.error("Failed to load manifest:",o)});const l=window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone===!0;console.log("Running as PWA:",l),console.log("Viewport width:",window.innerWidth),console.log("Viewport height:",window.innerHeight),console.log("Device pixel ratio:",window.devicePixelRatio),"orientation"in screen&&console.log("Screen orientation:",screen.orientation.type),console.groupEnd()}/Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(console.log("📱 Mobile device detected - running PWA debug..."),setTimeout(c,1e3));export{c as debugPWA};
