name: Docker Build and Push

on:
  push:
    branches:
      - develop
      - main
      - rebase

# Concurrency control to prevent race conditions
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.15.0'
        cache: 'npm'
        cache-dependency-path: './app/frontend/package-lock.json'
        
    - name: Build Frontend
      working-directory: ./app/frontend
      run: |
        npm ci
        npm run build
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Determine Docker tag
      id: determine_tag
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "TAG=latest" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=latest-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" = "refs/heads/rebase" ]; then
          echo "TAG=rebase" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=rebase-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        else
          echo "TAG=develop" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=develop-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        fi
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        cache-from: |
          type=gha
          frequency2098/streamvault:${{ steps.determine_tag.outputs.TAG }}
        cache-to: type=gha,mode=max
        build-args: |
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        tags: |
          frequency2098/streamvault:${{ steps.determine_tag.outputs.TAG }}
          frequency2098/streamvault:${{ steps.determine_tag.outputs.VERSION_TAG }}
    
    - name: Scan Docker image for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'frequency2098/streamvault:${{ steps.determine_tag.outputs.TAG }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
    
    - name: Check Docker image size
      run: |
        docker pull frequency2098/streamvault:${{ steps.determine_tag.outputs.TAG }}
        IMAGE_SIZE=$(docker image inspect frequency2098/streamvault:${{ steps.determine_tag.outputs.TAG }} --format='{{.Size}}')
        SIZE_MB=$((IMAGE_SIZE/1024/1024))
        echo "Image size: $SIZE_MB MB"
        if [ $SIZE_MB -gt 500 ]; then
          echo "::warning::Docker image size ($SIZE_MB MB) exceeds recommended limit of 500 MB"
        fi
